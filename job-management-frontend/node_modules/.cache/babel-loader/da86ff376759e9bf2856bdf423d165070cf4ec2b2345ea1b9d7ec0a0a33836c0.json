{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\vitor\\\\OneDrive\\\\Documentos\\\\automacao_fluxo_marketing\\\\automacao_fluxo_marketing\\\\job-management-frontend\\\\src\\\\ArchivedJobList.js\",\n  _s = $RefreshSig$();\n// ArchivedJobList.js\nimport React, { useState, useEffect } from 'react';\nimport JobCard from './JobCard';\nimport './ArchivedJobList.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ArchivedJobList = () => {\n  _s();\n  const [archivedJobs, setArchivedJobs] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  // Busca os jobs arquivados\n  useEffect(() => {\n    const fetchArchivedJobs = async () => {\n      try {\n        setLoading(true);\n        const response = await fetch('http://localhost:8000/api/jobs/archived/');\n        if (!response.ok) throw new Error('Erro ao carregar jobs arquivados.');\n        const data = await response.json();\n        setArchivedJobs(data);\n      } catch (err) {\n        setError(err.message);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchArchivedJobs();\n  }, []);\n\n  // Renderiza conteúdo baseado no estado\n  if (loading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Carregando jobs arquivados...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 23\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [\"Erro: \", error]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 21\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"archived-job-list-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Jobs Arquivados\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"archived-job-list\",\n      children: archivedJobs.map(job => /*#__PURE__*/_jsxDEV(JobCard, {\n        job: job\n      }, job.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n};\n_s(ArchivedJobList, \"iFy8fVbzYEwVCM4mYktO39qmAl8=\");\n_c = ArchivedJobList;\nexport default ArchivedJobList;\nvar _c;\n$RefreshReg$(_c, \"ArchivedJobList\");","map":{"version":3,"names":["React","useState","useEffect","JobCard","jsxDEV","_jsxDEV","ArchivedJobList","_s","archivedJobs","setArchivedJobs","loading","setLoading","error","setError","fetchArchivedJobs","response","fetch","ok","Error","data","json","err","message","children","fileName","_jsxFileName","lineNumber","columnNumber","className","map","job","id","_c","$RefreshReg$"],"sources":["C:/Users/vitor/OneDrive/Documentos/automacao_fluxo_marketing/automacao_fluxo_marketing/job-management-frontend/src/ArchivedJobList.js"],"sourcesContent":["// ArchivedJobList.js\r\nimport React, { useState, useEffect } from 'react';\r\nimport JobCard from './JobCard'; \r\nimport './ArchivedJobList.css'; \r\n\r\nconst ArchivedJobList = () => {\r\n  const [archivedJobs, setArchivedJobs] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n\r\n  // Busca os jobs arquivados\r\n  useEffect(() => {\r\n    const fetchArchivedJobs = async () => {\r\n      try {\r\n        setLoading(true);\r\n        const response = await fetch('http://localhost:8000/api/jobs/archived/');\r\n        if (!response.ok) throw new Error('Erro ao carregar jobs arquivados.');\r\n        \r\n        const data = await response.json();\r\n        setArchivedJobs(data);\r\n      } catch (err) {\r\n        setError(err.message);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n    fetchArchivedJobs();\r\n  }, []);\r\n\r\n  // Renderiza conteúdo baseado no estado\r\n  if (loading) return <div>Carregando jobs arquivados...</div>;\r\n  if (error) return <div>Erro: {error}</div>;\r\n\r\n  return (\r\n    <div className=\"archived-job-list-container\">\r\n      <h1>Jobs Arquivados</h1>\r\n      <div className=\"archived-job-list\">\r\n        {archivedJobs.map((job) => (\r\n          <JobCard key={job.id} job={job} />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ArchivedJobList;\r\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,OAAO,MAAM,WAAW;AAC/B,OAAO,uBAAuB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/B,MAAMC,eAAe,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC5B,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EACpD,MAAM,CAACS,OAAO,EAAEC,UAAU,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACW,KAAK,EAAEC,QAAQ,CAAC,GAAGZ,QAAQ,CAAC,IAAI,CAAC;;EAExC;EACAC,SAAS,CAAC,MAAM;IACd,MAAMY,iBAAiB,GAAG,MAAAA,CAAA,KAAY;MACpC,IAAI;QACFH,UAAU,CAAC,IAAI,CAAC;QAChB,MAAMI,QAAQ,GAAG,MAAMC,KAAK,CAAC,0CAA0C,CAAC;QACxE,IAAI,CAACD,QAAQ,CAACE,EAAE,EAAE,MAAM,IAAIC,KAAK,CAAC,mCAAmC,CAAC;QAEtE,MAAMC,IAAI,GAAG,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;QAClCX,eAAe,CAACU,IAAI,CAAC;MACvB,CAAC,CAAC,OAAOE,GAAG,EAAE;QACZR,QAAQ,CAACQ,GAAG,CAACC,OAAO,CAAC;MACvB,CAAC,SAAS;QACRX,UAAU,CAAC,KAAK,CAAC;MACnB;IACF,CAAC;IACDG,iBAAiB,CAAC,CAAC;EACrB,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA,IAAIJ,OAAO,EAAE,oBAAOL,OAAA;IAAAkB,QAAA,EAAK;EAA6B;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAK,CAAC;EAC5D,IAAIf,KAAK,EAAE,oBAAOP,OAAA;IAAAkB,QAAA,GAAK,QAAM,EAACX,KAAK;EAAA;IAAAY,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAM,CAAC;EAE1C,oBACEtB,OAAA;IAAKuB,SAAS,EAAC,6BAA6B;IAAAL,QAAA,gBAC1ClB,OAAA;MAAAkB,QAAA,EAAI;IAAe;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACxBtB,OAAA;MAAKuB,SAAS,EAAC,mBAAmB;MAAAL,QAAA,EAC/Bf,YAAY,CAACqB,GAAG,CAAEC,GAAG,iBACpBzB,OAAA,CAACF,OAAO;QAAc2B,GAAG,EAAEA;MAAI,GAAjBA,GAAG,CAACC,EAAE;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAa,CAClC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACpB,EAAA,CAtCID,eAAe;AAAA0B,EAAA,GAAf1B,eAAe;AAwCrB,eAAeA,eAAe;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
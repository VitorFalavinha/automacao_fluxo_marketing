{"ast":null,"code":"import React,{useState,useEffect}from'react';import'./JobList.css';import Modal from'./Modal';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const JobList=()=>{const[jobs,setJobs]=useState([]);const[editingJob,setEditingJob]=useState(null);const[title,setTitle]=useState('');const[description,setDescription]=useState('');const[client,setClient]=useState('');const[isModalOpen,setIsModalOpen]=useState(false);useEffect(()=>{fetch('http://localhost:8000/api/jobs/').then(response=>response.json()).then(data=>{setJobs(data);}).catch(error=>console.error('Error fetching jobs:',error));},[]);const handleEdit=job=>{setEditingJob(job);setTitle(job.title);setDescription(job.description);setClient(job.client);setIsModalOpen(true);};const handleDelete=id=>{fetch(`http://localhost:8000/api/jobs/${id}/`,{method:'DELETE'}).then(()=>{const remainingJobs=jobs.filter(job=>job.id!==id);setJobs(remainingJobs);}).catch(error=>console.error('Error deleting job:',error));};const handleUpdate=id=>{fetch(`http://localhost:8000/api/jobs/${id}/`,{method:'PUT',headers:{'Content-Type':'application/json'},body:JSON.stringify({title,description,client})}).then(response=>response.json()).then(updatedJob=>{const updatedJobs=jobs.map(job=>job.id===updatedJob.id?updatedJob:job);setJobs(updatedJobs);setIsModalOpen(false);setEditingJob(null);setTitle('');setDescription('');setClient('');}).catch(error=>console.error('Error updating job:',error));};return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Jobs List\"}),/*#__PURE__*/_jsx(\"ul\",{children:jobs.map(job=>/*#__PURE__*/_jsxs(\"li\",{children:[job.title,/*#__PURE__*/_jsxs(\"div\",{className:\"button-container\",children:[/*#__PURE__*/_jsx(\"button\",{onClick:()=>handleEdit(job),children:\"Editar\"}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>handleDelete(job.id),children:\"Deletar\"})]})]},job.id))}),/*#__PURE__*/_jsx(Modal,{isOpen:isModalOpen,onClose:()=>setIsModalOpen(false),onSave:handleUpdate,job:editingJob})]});};export default JobList;","map":{"version":3,"names":["React","useState","useEffect","Modal","jsx","_jsx","jsxs","_jsxs","JobList","jobs","setJobs","editingJob","setEditingJob","title","setTitle","description","setDescription","client","setClient","isModalOpen","setIsModalOpen","fetch","then","response","json","data","catch","error","console","handleEdit","job","handleDelete","id","method","remainingJobs","filter","handleUpdate","headers","body","JSON","stringify","updatedJob","updatedJobs","map","children","className","onClick","isOpen","onClose","onSave"],"sources":["C:/Users/vitor/job-management-frontend/src/JobList.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport './JobList.css';\r\nimport Modal from './Modal';\r\n\r\nconst JobList = () => {\r\n  const [jobs, setJobs] = useState([]);\r\n  const [editingJob, setEditingJob] = useState(null);\r\n  const [title, setTitle] = useState('');\r\n  const [description, setDescription] = useState('');\r\n  const [client, setClient] = useState('');\r\n  const [isModalOpen, setIsModalOpen] = useState(false);\r\n\r\n  useEffect(() => {\r\n    fetch('http://localhost:8000/api/jobs/')\r\n      .then(response => response.json())\r\n      .then(data => {\r\n        setJobs(data);\r\n      })\r\n      .catch(error => console.error('Error fetching jobs:', error));\r\n  }, []);\r\n\r\n  const handleEdit = (job) => {\r\n    setEditingJob(job);\r\n    setTitle(job.title);\r\n    setDescription(job.description);\r\n    setClient(job.client);\r\n    setIsModalOpen(true);\r\n  };\r\n\r\n  const handleDelete = (id) => {\r\n    fetch(`http://localhost:8000/api/jobs/${id}/`, {\r\n      method: 'DELETE',\r\n    })\r\n      .then(() => {\r\n        const remainingJobs = jobs.filter(job => job.id !== id);\r\n        setJobs(remainingJobs);\r\n      })\r\n      .catch(error => console.error('Error deleting job:', error));\r\n  };\r\n\r\n  const handleUpdate = (id) => {\r\n    fetch(`http://localhost:8000/api/jobs/${id}/`, {\r\n      method: 'PUT',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify({ title, description, client }),\r\n    })\r\n      .then(response => response.json())\r\n      .then(updatedJob => {\r\n        const updatedJobs = jobs.map(job => (job.id === updatedJob.id ? updatedJob : job));\r\n        setJobs(updatedJobs);\r\n        setIsModalOpen(false);\r\n        setEditingJob(null);\r\n        setTitle('');\r\n        setDescription('');\r\n        setClient('');\r\n      })\r\n      .catch(error => console.error('Error updating job:', error));\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1>Jobs List</h1>\r\n      <ul>\r\n        {jobs.map((job) => (\r\n          <li key={job.id}>\r\n            {job.title}\r\n            <div className=\"button-container\">\r\n              <button onClick={() => handleEdit(job)}>Editar</button>\r\n              <button onClick={() => handleDelete(job.id)}>Deletar</button>\r\n            </div>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n\r\n      <Modal\r\n        isOpen={isModalOpen}\r\n        onClose={() => setIsModalOpen(false)}\r\n        onSave={handleUpdate}\r\n        job={editingJob}\r\n        \r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default JobList;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
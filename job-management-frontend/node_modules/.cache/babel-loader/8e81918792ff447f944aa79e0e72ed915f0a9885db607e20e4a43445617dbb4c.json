{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\vitor\\\\job-management-frontend\\\\src\\\\JobList.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport Modal from './Modal';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst JobList = () => {\n  _s();\n  const [jobs, setJobs] = useState([]);\n  const [editingJob, setEditingJob] = useState(null);\n  useEffect(() => {\n    fetch('http://localhost:8000/api/jobs/').then(response => response.json()).then(data => setJobs(data)).catch(error => console.error('Error fetching jobs:', error));\n  }, []);\n  const handleUpdate = updatedJob => {\n    fetch(`http://localhost:8000/api/jobs/${updatedJob.id}/`, {\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(updatedJob)\n    }).then(response => {\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n      return response.json();\n    }).then(job => {\n      const updatedJobs = jobs.map(j => j.id === job.id ? job : j);\n      setJobs(updatedJobs);\n    }).catch(error => console.error('Error updating job:', error));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Jobs List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: jobs.map(job => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [job.title, /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setEditingJob(job),\n          children: \"Editar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 7\n        }, this)]\n      }, job.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 5\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), editingJob && /*#__PURE__*/_jsxDEV(Modal, {\n      job: editingJob,\n      onClose: () => setEditingJob(null),\n      onUpdate: handleUpdate\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n};\n_s(JobList, \"c7Ex+3r7d9AfsC4lB2vG11VmC50=\");\n_c = JobList;\nexport default JobList;\nvar _c;\n$RefreshReg$(_c, \"JobList\");","map":{"version":3,"names":["React","useState","useEffect","Modal","jsxDEV","_jsxDEV","JobList","_s","jobs","setJobs","editingJob","setEditingJob","fetch","then","response","json","data","catch","error","console","handleUpdate","updatedJob","id","method","headers","body","JSON","stringify","ok","Error","job","updatedJobs","map","j","children","fileName","_jsxFileName","lineNumber","columnNumber","title","onClick","onClose","onUpdate","_c","$RefreshReg$"],"sources":["C:/Users/vitor/job-management-frontend/src/JobList.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport Modal from './Modal';\r\n\r\nconst JobList = () => {\r\n  const [jobs, setJobs] = useState([]);\r\n  const [editingJob, setEditingJob] = useState(null);\r\n\r\n  useEffect(() => {\r\n    fetch('http://localhost:8000/api/jobs/')\r\n      .then(response => response.json())\r\n      .then(data => setJobs(data))\r\n      .catch(error => console.error('Error fetching jobs:', error));\r\n  }, []);\r\n\r\n  const handleUpdate = (updatedJob) => {\r\n    fetch(`http://localhost:8000/api/jobs/${updatedJob.id}/`, {\r\n      method: 'PUT',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify(updatedJob),\r\n    })\r\n    .then(response => {\r\n      if (!response.ok) {\r\n        throw new Error('Network response was not ok');\r\n      }\r\n      return response.json();\r\n    })\r\n    .then(job => {\r\n      const updatedJobs = jobs.map(j => (j.id === job.id ? job : j));\r\n      setJobs(updatedJobs);\r\n    })\r\n    .catch(error => console.error('Error updating job:', error));\r\n  };\r\n  \r\n\r\n  return (\r\n    <div>\r\n      <h1>Jobs List</h1>\r\n      <ul>\r\n      {jobs.map(job => (\r\n    <li key={job.id}>\r\n      {job.title}\r\n      <button onClick={() => setEditingJob(job)}>Editar</button>\r\n    </li>\r\n  ))}\r\n</ul>\r\n\r\n      {editingJob && (\r\n        <Modal job={editingJob} onClose={() => setEditingJob(null)} onUpdate={handleUpdate} />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default JobList;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
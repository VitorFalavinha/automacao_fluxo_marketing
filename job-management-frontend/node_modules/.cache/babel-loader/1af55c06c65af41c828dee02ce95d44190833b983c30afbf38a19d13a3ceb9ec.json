{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\vitor\\\\OneDrive\\\\Documentos\\\\automacao_fluxo_marketing\\\\automacao_fluxo_marketing\\\\job-management-frontend\\\\src\\\\JobList.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport Modal from './Modal';\nimport JobCard from './JobCard';\nimport './JobList.css';\nimport BackButton from './components/BackButton';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst JobList = () => {\n  _s();\n  const [jobs, setJobs] = useState([]);\n  const [editingJob, setEditingJob] = useState(null);\n  useEffect(() => {\n    fetch('http://localhost:8000/api/jobs/').then(response => response.json()).then(data => {\n      // Ordena os jobs: pendentes primeiro, aprovados depois\n      const sortedJobs = data.sort((a, b) => {\n        if (a.status === 'pendente' && b.status === 'aprovado') return -1;\n        if (a.status === 'aprovado' && b.status === 'pendente') return 1;\n        return 0;\n      });\n      setJobs(sortedJobs);\n    }).catch(error => console.error('Error fetching jobs:', error));\n  }, []);\n  const handleUpdate = updatedJob => {\n    fetch(`http://localhost:8000/api/jobs/${updatedJob.id}/`, {\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(updatedJob)\n    }).then(response => response.json()).then(job => {\n      const updatedJobs = jobs.map(j => j.id === job.id ? job : j);\n      setJobs(updatedJobs);\n      setEditingJob(null); // Fecha o modal após a atualização\n    }).catch(error => console.error('Error updating job:', error));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(BackButton, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), \" \", /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"job-list-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Jobs List\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"job-list\",\n        children: jobs.map(job => /*#__PURE__*/_jsxDEV(JobCard, {\n          job: job,\n          onEdit: () => setEditingJob(job),\n          className: job.status === 'pendente' ? 'bg-pending' : job.status === 'aprovado' ? 'bg-approved' : 'bg-rejected'\n        }, job.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), editingJob && /*#__PURE__*/_jsxDEV(Modal, {\n        job: editingJob,\n        onClose: () => setEditingJob(null),\n        onUpdate: handleUpdate\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n};\n_s(JobList, \"c7Ex+3r7d9AfsC4lB2vG11VmC50=\");\n_c = JobList;\nexport default JobList;\nvar _c;\n$RefreshReg$(_c, \"JobList\");","map":{"version":3,"names":["React","useState","useEffect","Modal","JobCard","BackButton","jsxDEV","_jsxDEV","JobList","_s","jobs","setJobs","editingJob","setEditingJob","fetch","then","response","json","data","sortedJobs","sort","a","b","status","catch","error","console","handleUpdate","updatedJob","id","method","headers","body","JSON","stringify","job","updatedJobs","map","j","children","fileName","_jsxFileName","lineNumber","columnNumber","className","onEdit","onClose","onUpdate","_c","$RefreshReg$"],"sources":["C:/Users/vitor/OneDrive/Documentos/automacao_fluxo_marketing/automacao_fluxo_marketing/job-management-frontend/src/JobList.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport Modal from './Modal';\r\nimport JobCard from './JobCard'; \r\nimport './JobList.css'; \r\nimport BackButton from './components/BackButton';\r\n\r\nconst JobList = () => {\r\n  const [jobs, setJobs] = useState([]);\r\n  const [editingJob, setEditingJob] = useState(null);\r\n\r\n  useEffect(() => {\r\n    fetch('http://localhost:8000/api/jobs/')\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        // Ordena os jobs: pendentes primeiro, aprovados depois\r\n        const sortedJobs = data.sort((a, b) => {\r\n          if (a.status === 'pendente' && b.status === 'aprovado') return -1;\r\n          if (a.status === 'aprovado' && b.status === 'pendente') return 1;\r\n          return 0;\r\n        });\r\n        setJobs(sortedJobs);\r\n      })\r\n      .catch((error) => console.error('Error fetching jobs:', error));\r\n  }, []);\r\n\r\n  const handleUpdate = (updatedJob) => {\r\n    fetch(`http://localhost:8000/api/jobs/${updatedJob.id}/`, {\r\n      method: 'PUT',\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body: JSON.stringify(updatedJob),\r\n    })\r\n      .then(response => response.json())\r\n      .then(job => {\r\n        const updatedJobs = jobs.map(j => (j.id === job.id ? job : j));\r\n        setJobs(updatedJobs);\r\n        setEditingJob(null); // Fecha o modal após a atualização\r\n      })\r\n      .catch(error => console.error('Error updating job:', error));\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <BackButton /> {}\r\n      <div className=\"job-list-container\">\r\n        <h1>Jobs List</h1>\r\n        <div className=\"job-list\">\r\n          {jobs.map(job => (\r\n            <JobCard \r\n              key={job.id} \r\n              job={job} \r\n              onEdit={() => setEditingJob(job)} \r\n              className={\r\n                job.status === 'pendente' ? 'bg-pending'\r\n                  : job.status === 'aprovado'? 'bg-approved'\r\n                  : 'bg-rejected'\r\n              } \r\n            />\r\n          ))}\r\n        </div>\r\n        {editingJob && (\r\n          <Modal job={editingJob} onClose={() => setEditingJob(null)} onUpdate={handleUpdate} />\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default JobList;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
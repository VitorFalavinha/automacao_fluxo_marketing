{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\vitor\\\\OneDrive\\\\Documentos\\\\automacao_fluxo_marketing\\\\automacao_fluxo_marketing\\\\job-management-frontend\\\\src\\\\JobList.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport Modal from './Modal';\nimport JobCard from './JobCard'; // Importando o novo componente JobCard\nimport './JobList.css'; // Importando o CSS para estilizar os cards\nimport BackButton from './JobList.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst JobList = () => {\n  _s();\n  const [jobs, setJobs] = useState([]);\n  const [editingJob, setEditingJob] = useState(null);\n  useEffect(() => {\n    fetch('http://localhost:8000/api/jobs/').then(response => response.json()).then(data => setJobs(data)).catch(error => console.error('Error fetching jobs:', error));\n  }, []);\n  const handleUpdate = updatedJob => {\n    fetch(`http://localhost:8000/api/jobs/${updatedJob.id}/`, {\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(updatedJob)\n    }).then(response => response.json()).then(job => {\n      const updatedJobs = jobs.map(j => j.id === job.id ? job : j);\n      setJobs(updatedJobs);\n      setEditingJob(null); // Fecha o modal após a atualização\n    }).catch(error => console.error('Error updating job:', error));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(BackButton, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), \" \", /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"job-list-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Jobs List\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"job-list\",\n        children: jobs.map(job => /*#__PURE__*/_jsxDEV(JobCard, {\n          job: job,\n          onEdit: () => setEditingJob(job)\n        }, job.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 7\n      }, this), editingJob && /*#__PURE__*/_jsxDEV(Modal, {\n        job: editingJob,\n        onClose: () => setEditingJob(null),\n        onUpdate: handleUpdate\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n};\n_s(JobList, \"c7Ex+3r7d9AfsC4lB2vG11VmC50=\");\n_c = JobList;\nexport default JobList;\nvar _c;\n$RefreshReg$(_c, \"JobList\");","map":{"version":3,"names":["React","useState","useEffect","Modal","JobCard","BackButton","jsxDEV","_jsxDEV","JobList","_s","jobs","setJobs","editingJob","setEditingJob","fetch","then","response","json","data","catch","error","console","handleUpdate","updatedJob","id","method","headers","body","JSON","stringify","job","updatedJobs","map","j","children","fileName","_jsxFileName","lineNumber","columnNumber","className","onEdit","onClose","onUpdate","_c","$RefreshReg$"],"sources":["C:/Users/vitor/OneDrive/Documentos/automacao_fluxo_marketing/automacao_fluxo_marketing/job-management-frontend/src/JobList.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport Modal from './Modal';\r\nimport JobCard from './JobCard'; // Importando o novo componente JobCard\r\nimport './JobList.css'; // Importando o CSS para estilizar os cards\r\nimport BackButton from './JobList.css';\r\n\r\nconst JobList = () => {\r\n  const [jobs, setJobs] = useState([]);\r\n  const [editingJob, setEditingJob] = useState(null);\r\n\r\n  useEffect(() => {\r\n    fetch('http://localhost:8000/api/jobs/')\r\n      .then(response => response.json())\r\n      .then(data => setJobs(data))\r\n      .catch(error => console.error('Error fetching jobs:', error));\r\n  }, []);\r\n\r\n  const handleUpdate = (updatedJob) => {\r\n    fetch(`http://localhost:8000/api/jobs/${updatedJob.id}/`, {\r\n      method: 'PUT',\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body: JSON.stringify(updatedJob),\r\n    })\r\n      .then(response => response.json())\r\n      .then(job => {\r\n        const updatedJobs = jobs.map(j => (j.id === job.id ? job : j));\r\n        setJobs(updatedJobs);\r\n        setEditingJob(null); // Fecha o modal após a atualização\r\n      })\r\n      .catch(error => console.error('Error updating job:', error));\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <BackButton /> {}\r\n    <div className=\"job-list-container\">\r\n      <h1>Jobs List</h1>\r\n      <div className=\"job-list\">\r\n        {jobs.map(job => (\r\n          <JobCard key={job.id} job={job} onEdit={() => setEditingJob(job)} />\r\n        ))}\r\n      </div>\r\n      {editingJob && (\r\n        <Modal job={editingJob} onClose={() => setEditingJob(null)} onUpdate={handleUpdate} />\r\n      )}\r\n    </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default JobList;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}